// Generated by dojo-bindgen on Wed, 28 Aug 2024 14:26:17 +0000. Do not modify this file manually.
import { Account } from "starknet";
import { DojoProvider } from "@dojoengine/core";
import * as models from "./models.gen";

export type IWorld = Awaited<ReturnType<typeof setupWorld>>;

export async function setupWorld(provider: DojoProvider) {
    // System definitions for `game::home::home` contract
    function home() {
        const contract_name = "home";

        // Call the `dojo_resource` system with the specified Account and calldata
        const dojoResource = async (props: { account: Account }) => {
            try {
                return await provider.execute(
                    props.account,
                    contract_name,
                    "dojo_resource",
                    []
                );
            } catch (error) {
                console.error("Error executing spawn:", error);
                throw error;
            }
        };

        // Call the `createStrategy` system with the specified Account and calldata
        const createStrategy = async (props: {
            account: Account;
            Strength: number;
            Agility: number;
            Intelligence: number;
        }) => {
            try {
                return await provider.execute(
                    props.account,
                    contract_name,
                    "createStrategy",
                    [props.Strength, props.Agility, props.Intelligence]
                );
            } catch (error) {
                console.error("Error executing spawn:", error);
                throw error;
            }
        };

        // Call the `battlefield` system with the specified Account and calldata
        const battlefield = async (props: {
            account: Account;
            challengerID: number;
            defenderID: number;
            result: number;
        }) => {
            try {
                return await provider.execute(
                    props.account,
                    contract_name,
                    "battlefield",
                    [props.challengerID, props.defenderID, props.result]
                );
            } catch (error) {
                console.error("Error executing spawn:", error);
                throw error;
            }
        };

        return {
            dojoResource,
            createStrategy,
            battlefield,
        };
    }

    return {
        home: home(),
    };
}
